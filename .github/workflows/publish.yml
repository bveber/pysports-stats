on:
  release:
    types:
      - published

name: PyPI Publish

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.8'
      - name: Permacache Poetry
        id: cache-poetry
        uses: actions/cache@v2.1.6
        with:
          path: ~/.poetry
          key: poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Add Poetry to $PATH
        run: |
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Get Poetry version
        run: poetry --version
      - name: Check pyproject.toml validity
        run: poetry check --no-interaction
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2.1.6
        with:
          path: ${{github.workspace}}/.venv
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-
      - name: Install deps
        if: steps.cache-deps.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction
      - name: Publish to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish --build